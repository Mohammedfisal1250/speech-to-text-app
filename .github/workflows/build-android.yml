name: Build Android APK

on:
  push:
    branches:
      - main  # Set this to your default branch name, e.g., main or master
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # This action is usually fine as it does not depend on Node.js.

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  # Ensure the Python version you need.
   
    - name: List SDK Tools Directory
      run: |
        ls -l ~/android-sdk/cmdline-tools/tools/bin
    
    - name: Install Android SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk unzip
        mkdir -p ~/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -P ~/android-sdk/cmdline-tools
        unzip ~/android-sdk/cmdline-tools/commandlinetools-linux-8512546_latest.zip -d ~/android-sdk/cmdline-tools
        echo "ANDROID_HOME=~/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:~/android-sdk/cmdline-tools/tools/bin" >> $GITHUB_ENV
        source ~/.bashrc
        echo "y" | ~/android-sdk/cmdline-tools/tools/bin/sdkmanager --licenses
        ~/android-sdk/cmdline-tools/tools/bin/sdkmanager "platforms;android-30" "build-tools;30.0.3"  # Adjust the version as needed
        # Debugging step to list SDK tools directory
        ls -l ~/android-sdk/cmdline-tools/tools/bin

    - name: Install dependencies
      run: |
        python -m venv venv
        python -m pip install --upgrade pip
        source venv/bin/activate
        pip install kivy buildozer
        pip install Cython  # Ensure Cython is installed

    - name: Build APK
      run: |
        source venv/bin/activate
        buildozer -v android debug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: ./bin/*.apk
